<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.7-b01-. --><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stdquery="http://www.utiba.com/delirium/ws/StdQuery" xmlns:tns="urn:UMARKETSCWS" xmlns:typedquery="http://www.utiba.com/delirium/ws/TypedQuery" xmlns:misc="http://www.utiba.com/delirium/ws/Misc" targetNamespace="urn:UMARKETSCWS" elementFormDefault="qualified">
    <xsd:import namespace="http://www.utiba.com/delirium/ws/StdQuery" schemaLocation="umarketsc3.xsd" />
    <xsd:import namespace="http://www.utiba.com/delirium/ws/TypedQuery" schemaLocation="umarketsc4.xsd" />
    <xsd:import namespace="http://www.utiba.com/delirium/ws/Misc" schemaLocation="umarketsc2.xsd" />
    <xsd:complexType name="KeyValuePair">
        <xsd:sequence maxOccurs="1" minOccurs="1">
            <xsd:element name="key" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        A key used for retrieving the matching value.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="value" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        The value associated with the given key.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="KeyValuePairMap">
        <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="unbounded" name="keyValuePair" type="tns:KeyValuePair">
                <xsd:annotation>
                    <xsd:documentation>
                        A collection of key/value pairs. Self-explanatory.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="getTransactionByIDRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="ID" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Transaction ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="TransactionResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="transaction" type="typedquery:Transaction">
                        <xsd:annotation>
                            <xsd:documentation>
                                The transaction returned.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getTransactionByID">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getTransactionByIDRequest" type="tns:getTransactionByIDRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="TransactionResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="TransactionReturn" type="tns:TransactionResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="MarketAgent">
        <xsd:complexContent>
            <xsd:extension base="typedquery:Agent">
                <xsd:annotation>
                    <xsd:documentation>
                    <!-- This extends the type Agent. Please see TypedQuery.xsd toward the bottom of this document. -->
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="createdDate" type="xsd:dateTime">
                        <xsd:annotation>
                            <xsd:documentation>
                                The date the agent was created.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="deletedDate" type="xsd:dateTime">
                        <xsd:annotation>
                            <xsd:documentation>
                                The date the agent was deleted, or null.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="organisation" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Organisation.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="DSComission" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Direct Sale Commission.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="POSComission" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Point Of Sale Commission.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agentObject" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The special agent object.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="loBalThreshold" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The low balance threshold for autocashin.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="loBalAmount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount for autocashin.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="loBalSource" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The source agent for autocashin.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hiBalThreshold" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The high balance threshold for autocashout.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hiBalAmount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount for autocashout.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hiBalSource" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The source agent for autocashout.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lastAutoCash" type="xsd:dateTime">
                        <xsd:annotation>
                            <xsd:documentation>
                                The time of the last autocashin/out. Used to ensure only one attempt per hour.
                                Can be null.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="category" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent category. For instance: Distributor or User.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="getAgentGroupByAgentIDRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agentID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Agent ID for retrieving group information.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="AgentGroupsResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="agentGroups" type="typedquery:AgentGroup">
                        <xsd:annotation>
                            <xsd:documentation>
                                Agent group/s. <!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAgentGroupByAgentID">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAgentGroupByAgentIDRequest" type="tns:getAgentGroupByAgentIDRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getAllAgentGroups">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAllAgentGroupsRequest" type="tns:getAllGroupsRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AgentGroupsResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="AgentGroupsReturn" type="tns:AgentGroupsResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAgentByReferenceRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="reference" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Agent reference.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="category" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Agent category. Agent will not be returned if it doesn't belong to this category.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="autogen" type="xsd:boolean" fixed="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Fixed value to false. Should not be changed.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="AgentResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent" type="tns:MarketAgent" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAgentByReference">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAgentByReferenceRequest" type="tns:getAgentByReferenceRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AgentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="AgentReturn" type="tns:AgentResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAgentByReferenceIDRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="referenceID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Reference ID of the agent to retrieve.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAgentByReferenceID">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAgentByReferenceIDRequest" type="tns:getAgentByReferenceIDRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAccountByReferenceIDRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="referenceID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Agent reference.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="getAccountByReferenceIDAndTypeRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="referenceID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Agent reference.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="autogen" type="xsd:boolean" fixed="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Fixed value to false. Should not be changed.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="AccountsResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="accounts" type="typedquery:Account">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant accounts, if existing.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="AccountResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="account" type="typedquery:Account">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant account, if existing.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAccountByReferenceID">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAccountByReferenceIDRequest" type="tns:getAccountByReferenceIDRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getAccountByReferenceIDAndType">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAccountByReferenceIDAndTypeRequest" type="tns:getAccountByReferenceIDAndTypeRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AccountsResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="AccountsReturn" type="tns:AccountsResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AccountResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="AccountReturn" type="tns:AccountResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="pin">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="pinRequest" type="tns:pinRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="pinRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="initiator" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent that is changing the PIN.
                                DEPRECATED - Initiator is already know from the login session. No need to supply it.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="pin" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The SHA encoded existing password. See login above for details on how to encode
                                the pin.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="new_pin" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The new password. The password is sent to the platform in plain text.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="pinResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="pinReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="sales">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="salesRequest" type="tns:salesRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="salesRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The wallet to get a sales report for. If not specified – get total sales for all
                                wallets.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The special agent the report is in respect to.
                                For example – 'bank' or 'airtime' etc. If not specified – get total sales for
                                all special agents.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="start" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Start date report operates from. If not provided – default to today.
                                Start date is always start of day. i.e. 00:00:00
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="start_offset" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Number of days to offset start date by. -ve values indicate a offset into the
                                past, +ve values indicate offset into the future.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="end" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                End date report operates to. If not provided – default to start.
                                (NOT start+start_offset)
                                End date indicates end of day/start of next day (not inclusive of midnight).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="end_offset" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Number of days to offset end date by. -ve values indicate a offset into the
                                past, +ve values indicate offset into the future.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="salesResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="salesReturn" type="tns:salesResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="salesResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="sum" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Total sum of matching transactions. Although from perspective of
                                initiator the system is tallying debit (-ve) transactions, this
                                figure is to be reported as a +ve number.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="count" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Total number of matching transactions.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="createcoupon">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createcouponRequest" type="tns:createcouponRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="createcouponRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of the transaction/coupon.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="wallet_type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The type of wallet to charge eg 1=E­Wallet. Default to 1 if not provided.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="reserve" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>
                                If set – then amount specified is to be
                                preserved with creation of coupon. If
                                initiator does not have enough funds, then
                                cancel operations.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="provider" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The provider of the coupon. Defaults to initiator.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="recipient" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The recipient of the coupon.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="coupon_type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                0=Multiple use – unused money can be
                                collected. This is the default coupon_type if not
                                provided.
                                1=Single use – unused money discarded.
                                2=Single use – collected amount must
                                match allocated amount.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="req_conf_provider" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>
                                Require provider confirmation. If this is set
                                to true, and 'provider' is not provided,
                                initiator will be used. Default false.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="req_conf_recipient" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>
                                Require recipient confirmation. If this is set
                                to true, 'recipient' must be provided. Default
                                false.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ruleid" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The coupon rule to evaluate whenever an
                                attempt is made to bill against this
                                coupon/authorization.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="expiry" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The date/time when the coupon will automatically close.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="couponid" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                If provided, this coupon id will be used during coupon creation.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="recipient_name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The recipient's name. Could be used for validation by a retailer.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="details" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Extra information eg current, rates.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="createcouponResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createcouponReturn" type="tns:createcouponResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="createcouponResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="couponid" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The coupon id created or passed through from the request.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="activate">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="activateRequest" type="tns:standardBizRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="activateResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="activateReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="sell">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="sellRequest" type="tns:sellRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="sellRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="to" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Reference of target/creditor.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Amount to request.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="sellResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="sellReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="cashout">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="cashoutRequest" type="tns:cashoutRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="cashoutRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="to" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Reference of target/creditor.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Amount to request.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="cashoutResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="cashoutReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="buy">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="buyRequest" type="tns:buyRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="buyRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The product provider. Valid values are: airtime.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type to use. 1 = e­money. 2 = stock. Default is 1 (e­money )
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount to pay.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="product" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The product code.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="recipient" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The recipient of the purchase. If not specified default to the initiator.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="reference1" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Customer ref #1.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="reference2" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Customer ref #2.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="notify_alternate" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Send notification to agent alternate.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="buyResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="buyReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="donate">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="donateRequest" type="tns:donateRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="donateRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The charity to send the funds to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="charity" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                If the charity is a charity aggregator, this
                                field is used to specify the actual charity or
                                branch/arm within the organisation the
                                donation is intended for
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of funds to transfer.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="notify_alternate" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Send notification to notify_alternate field of agent.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="donateResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="donateReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="authorise">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="authoriseRequest" type="tns:authoriseRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="authoriseRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                If provided only returns authorisation analysis on a single function.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="authoriseResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="authoriseReturn" type="tns:authoriseResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="authoriseResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="functions" type="tns:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                Key/value pair list of functions ­ set to 'allow' or 'deny'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="default_access" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                'Allow' or 'deny'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="authorise2">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="authoriseRequest" type="tns:authoriseRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="authorise2Response">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="authorise2Return" type="tns:authorise2ResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="authorise2ResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="functions" type="misc:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                Key/value pair list of functions ­ set to 'allow' or 'deny'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="default_access" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                'Allow' or 'deny'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="reverse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="reverseRequest" type="tns:reverseRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="reverseRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="transactionID" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Transaction ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="transactionExtRef" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Client reference for transaction to be reversed.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount to reverse. Optional. Default is to reverse the full amount.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="reverseResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="reverseReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="login">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="loginRequest" type="tns:loginRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="loginRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="initiator" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent that is logging in.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="pin" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The login password. The password is
                                cryptographically hashed to further protect it. Please see the document
                                "PD-SC-SOAP-UM-FS-07-10-A7 UMarket SOAP API Functional Specification.pdf"
                                for details on how to generate the pin.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="loginResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="loginReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="balance">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="balanceRequest" type="tns:balanceRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="balanceRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Limit Enquiry to this specific wallet. Valid values include standard wallet
                                type:
                                1 (e­wallet), 2 (stock) and 3 (points). And custom wallet types which are only
                                available from custom UMarket products.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="balanceResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="balanceReturn" type="tns:balanceResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="balanceResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="avail" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Available “custom wallet” balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="avail_1" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Available e­wallet balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="avail_2" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Available stock balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="avail_3" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Available points balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="current" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Current “custom wallet” balance
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="current_1" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Current e­wallet balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="current_2" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Current stock balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="current_3" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Current points balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="pending" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Pending “custom wallet” balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="pending_1" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Pending e­wallet balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="pending_2" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Pending stock balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="pending_3" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Pending points balance.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="balances" type="tns:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant account balances.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delete">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deleteRequest" type="tns:deleteRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="deleteRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Reference of the agent to delete. If not given, will delete the agent issuing
                                the request.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="deleteResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deleteReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createsession">
        <xsd:complexType>
            <xsd:annotation>
                <xsd:documentation>
                    No parameters.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createsessionResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createsessionReturn" type="tns:createsessionResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="createsessionResponseType">
        <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="sessionid" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        The resultant session id. Session Ids are 20 character
                        alphanumeric strings. For example a session may be:
                        1UT3UKBGYNNRTB5W34P5
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="1" maxOccurs="1" name="result" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>
                        The result code represents the actual outcome of the request. A result of 0
                        represents success. Non zero values represent failure. See Appendix A for
                        complete list of possible result codes.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="1" maxOccurs="1" name="result_namespace" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        Represents a string. It can be one of the following values:
                        'soap' - a soap based result.
                        'session' – a session based result.
                        'core' – a result generated by the biz component.
                        'umarket' – a result generated by the biz component.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="delschedule">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delscheduleRequest" type="tns:delscheduleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="delscheduleRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="sched_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Schedule ID of the schedule to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delscheduleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delscheduleReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="transquery">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="transqueryRequest" type="tns:transqueryRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="transqueryRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="transid" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The transaction to query.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="transqueryResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="transqueryReturn" type="tns:transqueryResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="transqueryResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="initiator" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The Agent reference of the initiator.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="creditor" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The Agent reference of the creditor.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="debtor" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The Agent reference of the debtor.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of the transaction.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                1: e­money 2: stock 3: points
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="external" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>
                                Did this transaction involve an external system, such as a bank or IN?
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="date" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Number of milliseconds since Jan­ 1 ­1970 (UTC)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="state" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                1: progress
                                2: completed
                                5: rolling back
                                6: rolled back
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="trans_result" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Transaction result code.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="trans_result_namespace" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Transaction result namespace.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="transqueryext">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="transqueryextRequest" type="tns:transqueryextRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="transqueryextRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="transactionExtRef" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Client reference for the transaction to query.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="transqueryextResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="transqueryextReturn" type="tns:transqueryextResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="transqueryextResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of the transaction.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="date" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Number of milliseconds since Jan­ 1 ­1970 (UTC)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="state" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                1: progress
                                2: completed
                                5: rolling back
                                6: rolled back
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="trans_result" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Transaction result code.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="trans_result_namespace" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Transaction result namespace.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="query_transid" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Transaction ID of the queried transaction.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="nextid">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="nextidRequest" type="tns:nextidRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="nextidRequestType">
        <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="sessionid" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        A valid session id (for most functions you will have to login)
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="nextidResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="nextidReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="deactivate">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deactivateRequest" type="tns:standardBizRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="deactivateResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deactivateReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="bankcashin">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bankcashinRequest" type="tns:bankcashinRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="bankcashinRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The bank source to cashin from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="usedefault" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Use initiators default bank settings.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="details" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Used to specify details such as the bank account bank
                                number to be debited. The account detail required
                                varies between end bank systems, so the format of
                                this parameter can be customised to suit. The
                                standard value is just the bank account to be
                                debited.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of funds to cashin.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="bankcashinResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bankcashinReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="confirm">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="confirmRequest" type="tns:confirmRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="confirmRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="transid" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The ID of the transaction awaiting
                                confirmation. If not provided the system will
                                confirm the current outstanding transaction
                                – if only one such transaction exists
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="action" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The action to take. 'commit' or 'rollback'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="confirmResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="confirmReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="delchild">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delchildRequest" type="tns:delchildRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="delchildRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The child the client no longer intends to sell stock to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of the source. If not present assume source is the initiator (i.e. The
                                logged in SOAP user)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delchildResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delchildReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="transfer">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="transferRequest" type="tns:transferRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="transferRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="to" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent to send the funds to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of funds to transfer.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The type of funds to send. Valid values are
                                1 (e­wallet), 2 (stock) and 3 (points). If not
                                specified defaults to e­wallet. If not specified
                                defaults to 1 (e­wallet).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="message" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Additional message/notes to send to the
                                recipient as part of the transfer notification
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="transferResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="transferReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="cashin">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="cashinRequest" type="tns:cashinRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="cashinRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="to" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent to send the funds to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of funds to cashin.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The type of funds to send. Valid values are
                                1 (e­wallet), 2 (stock) and 3 (points). If not
                                specified defaults to e­wallet. If not specified
                                defaults to 1 (e­wallet).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="message" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Additional message/notes to send to the
                                recipient as part of the cashin notification
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="cashinResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="cashinReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="delparent">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delparentRequest" type="tns:delparentRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="delparentRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The parent the client no longer intends to purchase stock from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of the source. If not present assume source is the initiator (i.e. The
                                logged in SOAP user)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delparentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delparentReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="modify">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modifyRequest" type="tns:modifyRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modifyRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The Agent to modify. If not provided – assume modify the initiating agent.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the name of the Agent.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="email_address" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the optional email address.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="sms_address" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the optional SMS address.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="language" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the agent language. I.E. "EN" for english.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lo_bal_thres" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                When the balance goes below this amount, trigger a bank cash­in (optional).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lo_bal_amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                If performing a bank cash in, request this amount.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lo_bal_source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Which bank account to source the funds from (format will be implementation
                                specific).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hi_bal_thres" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                When the balance goes above this amount, trigger a bank cash­out (optional)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hi_bal_amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                If performing a bank cash out, send this amount.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hi_bal_source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Which bank account to transfer the funds to (format will be implementation
                                specific).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="status">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the agent status. Only change value for parameters provided.
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                            <xsd:all>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Registered" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Whether or not the agent has registered nor not.
                                            A user enables register via self register or registration via another proxy.
                                            Once an agent is registered it cannot be unregistered.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Active" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Whether or not the agent is active.
                                            An inactive agent cannot initiate transactions but they can still receive funds.
                                            Typically the agent self sets/unsets active status.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Suspended" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Whether or not the agent is stopped.
                                            A stopped agent cannot participate in any transaction in any capacity.
                                            Typically the agent self sets/unsets stop status.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Blacklisted" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Whether or not the agent is suspended. A suspended agent cannot participate
                                            in any transaction in any capacity. The intention of suspended is to lock an agent on an operator
                                            level. Suspend differs from frozen below in that suspended is intended to be used to
                                            block agents for non fraud/security purposes. It is intended to be a less 'severe'
                                            status to frozen.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Stopped" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Whether or not the agent is frozen. A frozen agent cannot participate in any transaction in any capacity.
                                            Only the operator, can set/unset the frozen status. The intention of frozen status is to lock an agent
                                            on an operator level – for example in response to suspected fraud.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                            </xsd:all>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the agent type flags. Only change value for parameters provided.
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                            <xsd:all>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Subscriber" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            A regular subscriber agent in the system.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Merchant" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            A Merchant is allowed to issue the SELL command.
                                            A sell command initiates a debit of another agents wallet
                                             – requiring them to confirm the operation for the transaction to proceed.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Trusted" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            A Trusted agent is an agent that can run a command, like SELL,
                                            that debits another agents wallet but not require the debitor agent to confirm the transaction.
                                            For example an agent with trusted+merchant can issue a sell command and debit the wallets of others without gaining their permission
                                             – the operation just goes ahead.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Cash" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            A Cash agent is an agent that can inject money into the system and take money out of the system.
                                            In the system all money is traceable via reports.
                                            All money in the system has an ultimate origin and ultimate destination where it entered and then existed the system.
                                            Cash agents indicate agents in the system that act as entry/exit points.
                                            Audit trails begin and end with cash agents.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" maxOccurs="1" name="Registrar" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            A registrar is an agent the register other agents on their behalf.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                            </xsd:all>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ds_commission" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the direct sale commission. (Rule ID)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="pos_commission" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the point of sale commission. (Rule ID)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent_object" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Change the special agent object reference.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="organisation">
                        <xsd:annotation>
                            <xsd:documentation>
                                Set agent organisation. (operator or 3rd party).
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:int">
                                <!-- Possible organisation type codes. -->
                                <xsd:enumeration id="THIRD_PARTY" value="0" />
                                <xsd:enumeration id="OPERATOR" value="1" />
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="extra_params" type="tns:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of key value pairs to store on the
                                agent. Each extra_params entry contains a
                                single 'key' parameter and a single 'value'
                                parameter.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modifyResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modifyReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="billpay">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="billpayRequest" type="tns:billpayRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="billpayRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The utility to pay the bill to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type to use. 1 = e­money. 2 = stock. Default is 1 (e­money).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount to pay.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="reference1" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Ref1 field.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="reference2" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Ref2 field.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="details" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Bill account identifier.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="notify_alternate" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Send notification to agent alternate.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="billpayResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="billpayReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="joinparent">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="joinparentRequest" type="tns:joinparentRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="joinparentRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The parent the client intends to purchase stock from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of the source. If not present assume source is the initiator (i.e. The
                                logged in SOAP user)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="joinparentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="joinparentReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="changeparent">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="changeparentRequest" type="tns:changeparentRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="changeparentRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="oldparent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The original parent the client purchased stock from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="newparent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The new parent the client will purchased stock from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="child" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The child to move from one parent to another
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="max_children" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The maximum number of children to move. This overides configuration. If this number is made to large it can potentially slow down the system. A value of 0 means no limit
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="changeparentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="changeparentReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="link">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="linkRequest" type="tns:linkRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="linkRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent to link.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The owner agent to link to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The type of link to create. 'subagent' for sub
                                agent type link or 'associated' for
                                association type link.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="linkResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="linkReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="stop">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="stopRequest" type="tns:standardBizRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="stopResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="stopReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="joinchild">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="joinchildRequest" type="tns:joinchildRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="joinchildRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The child the client intends to sell stock to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of the source. If not present assume source is the initiator (i.e. The
                                logged in SOAP user)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="joinchildResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="joinchildReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="query">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="queryRequest" type="tns:queryRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="queryRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="queryResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="queryReturn" type="tns:queryResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="queryResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="last_credit_value" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The last credit to the provided wallet, or the last credit to any wallet of the
                                agent.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="last_credit_date" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The last credit date.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="last_debit_value" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The last debit from the provided wallet, or the last debit from any wallet of
                                the agent.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="last_debit_date" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The last debit date.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="billcollect">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="billcollectRequest" type="tns:billcollectRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="billcollectRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="to" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent who is going to pay the bill.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount to pay.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="details" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Bill details – such as ref no.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="billcollectResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="billcollectReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="register">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="registerRequest" type="tns:registerRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="registerRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="initiator" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent that is requesting self register.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The Ref No of Agent to register. Could be a msisdn, landline number etc.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="new_pin" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The new password. The password is sent to the platform in plain text.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="language" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                'en' for English language preference. Blank, or not supplied then use default
                                language.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The name of the agent.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="email_address" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                An optional email address.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="sms_address" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                An optional SMS address.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lo_bal_thres" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                When the balance goes below this amount, trigger a bank cash­in (optional).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lo_bal_amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                If performing a bank cash in, request this amount.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lo_bal_source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Which bank account to source the funds from (format will be implementation
                                specific).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hi_bal_thres" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                When the balance goes above this amount, trigger a bank cash­out (optional).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hi_bal_amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                If performing a bank cash out, send this amount.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="hi_bal_source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Which bank account to transfer the funds to (format will be implementation
                                specific).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent_category" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The category that this agent will belongs to (e.g. Distributor or User).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="extra_params" type="tns:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of key value pairs to store on the
                                agent. Each extra_params entry contains a
                                single 'key' parameter anda single 'value'
                                parameter.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="attachments" type="typedquery:Attachment">
                        <xsd:annotation>
                            <xsd:documentation>
                                An option list of attachments (f.ex. photo, documents etc.) for the agent. The ID, entity type and entity ID of the supplied attachments will be ignored.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="registerResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="registerReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="bankcashout">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bankcashoutRequest" type="tns:bankcashoutRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="bankcashoutRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The bank source to cashout to 'debit' – for debit card
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of funds to cashout.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="usedefault" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Use initiators default bank settings
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="details" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Used to specify details such as the bank account
                                number to be credited. The account detail required
                                varies between end bank systems, so the format of
                                this parameter can be customised to suit. The
                                standard value is just the bank account to be
                                credited.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="notify_alternate" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Send notification to target in this agent's notify_alternate field.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="bankcashoutResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bankcashoutReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="finalizeExtTrans">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="finalizeExtTransRequest" type="tns:finalizeExtTransRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="finalizeExtTransRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="transid" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The transaction ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ext_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                ID from trans_ext_trans.id – needed to identify ext_trans to finalize.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="ext_type" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Type from trans_ext_trans.type
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="action">
                        <xsd:annotation>
                            <xsd:documentation>
                                One of the following:
                                "COMPLETE" – flag external operation as completed.
                                "FAIL" – flag external operation as unsuccessful/failed.
                                "COMPLETE_ROLLBACK" – flag external operation as having last sent rollback operation succeed or unnecessary (i.e. Nothing to rollback).
                                "FAIL_ROLLBACK" – flag external operation as having last sent rollback operation failed (i.e. Transaction is still complete).
                                "COMMIT_AGREED" – flag external operation as commit agreed (2 phase commit).
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                                <!-- Generic actions possible for finalizing an external transaction. -->
                                <xsd:enumeration value="complete" />
                                <xsd:enumeration value="fail" />
                                <xsd:enumeration value="commit_agreed" />
                                <xsd:enumeration value="complete_rollback" />
                                <xsd:enumeration value="fail_rollback" />
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="finalizeExtTransResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="finalizeExtTransReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="lastTransactionsRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="lastTransactionsRequestType" type="tns:lastTransactionsRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="lastTransactionsRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                	<xsd:element minOccurs="1" maxOccurs="1" name="transCount" type="xsd:int">
                		<xsd:annotation>
                			<xsd:documentation>
                				How many transactions you would
                				like to receive (Max).
                			</xsd:documentation>
                		</xsd:annotation>
                	</xsd:element>
                    <xsd:element name="agent" type="xsd:string" minOccurs="0" maxOccurs="1">
                        <xsd:annotation>
                           <xsd:documentation>
                                The agent reference to retrieve the last x transactions for
                           </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="lastTransactionsResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="lastTransactionsReturn" type="tns:lastTransactionsResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="lastTransactionsResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="transactionsList" type="typedquery:TransactionSummary">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of the initiators last transactions.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAllCapSets">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAllCapSetsRequest" type="stdquery:standardQueryRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="CapSetsResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="CapSetsReturn" type="tns:CapSetsResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="CapSetsResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="capsetlist" type="typedquery:CapSet">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of all matching cap sets.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getCapByID">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getCapByIDRequest" type="tns:getCapByIDRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getCapByIDRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Cap ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="GetCapResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="CapReturn" type="tns:CapResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="CapResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="capset" type="typedquery:CapSet">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant Cap if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAllCapDetailByCapsetIdRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getAllCapDetailByCapsetIdRequestType" type="tns:getAllCapDetailByCapsetIdRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAllCapDetailByCapsetIdRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="capsetId" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Cap set ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAllCapDetailByCapsetIdResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getAllCapDetailByCapsetIdResponseType" type="tns:getAllCapDetailByCapsetIdResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAllCapDetailByCapsetIdResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="unbounded" name="capDetailList" type="typedquery:CapDetail">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant list of cap details, if any exist.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAllCapDetails">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAllCapDetailsRequest" type="stdquery:standardQueryRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getAllCapDetailsResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAllCapDetailsReturn" type="tns:getAllCapDetailsResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAllCapDetailsResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="capDetailList" type="typedquery:CapDetail">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of all matching cap details.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getCapDetailByID">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getCapDetailByIDRequest" type="tns:getCapDetailByIDRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getCapDetailByIDRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Cap detail ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getCapDetailResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="CapDetailReturn" type="tns:CapDetailResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="CapDetailResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="capdetail" type="typedquery:CapDetail">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant cap detail, if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="addCapSet">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addCapSetRequest" type="tns:addCapSetRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addCapSetRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="description" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Description of the cap.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="addCapSetResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addCapSetReturn" type="tns:addCapSetResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addCapSetResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The resultant Cap ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modCapSet">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modCapSetRequest" type="tns:modCapSetRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modCapSetRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="csid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The cap ID to modify.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="description" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The new description of the cap.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modCapSetResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modCapSetReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="delCapSet">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delCapSetRequest" type="tns:delCapSetRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="delCapSetRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="csid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The cap ID to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delCapSetResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delCapSetReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:simpleType name="flagsSimpleType">
        <xsd:restriction base="xsd:long">
            <!-- Generic types possible for flags creation. -->
            <xsd:enumeration id="MultiSoftThreshold" value="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Allow soft threshold to fire multiple times instead of once.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration id="ZeroSoftThreshold" value="1">
                <xsd:annotation>
                    <xsd:documentation>
                        When soft threshold is crossed reset soft threshold tracking to 0.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:element name="addCapDetail">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addCapDetailRequest" type="tns:addCapDetailRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addCapDetailRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="csid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Cap Set ID to add detail for.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="capid" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Cap Type to add. i.e. 1 = SMS.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="pattern" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The activity pattern. i.e. Like a crontab entry.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type">
                        <xsd:annotation>
                            <xsd:documentation>
                                cap update type. Values are:
                                1) sum up transaction amounts,
                                2) count number of transactions
                                257) like 1 but only consider debit transactions
                                258) like 2 but only consider debit transactions
                                513) like 1 but only consider credit transactions
                                514) like 2 but only consider credit transactions
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:int">
                                <!-- Generic types possible for cap detail creation. -->
                                <xsd:enumeration id="limitAllByAmount" value="1" />
                                <xsd:enumeration id="limitAllByActivity" value="2" />
                                <xsd:enumeration id="limitDebitsByAmount" value="257" />
                                <xsd:enumeration id="limitDebitsByActivity" value="258" />
                                <xsd:enumeration id="limitCreditsByAmount" value="513" />
                                <xsd:enumeration id="limitCreditsByActivity" value="514" />
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="action" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule action to trigger when this cap fires or fails to fire.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="limit" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Hard limit for the cap.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="threshold" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Soft limit for the cap.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="flags" type="tns:flagsSimpleType">
                        <xsd:annotation>
                            <xsd:documentation>
                                Flags – bit mask of options:
                                0x01 – Multi Soft Threshold. Allow soft threshold to fire multiple times instead
                                of once.
                                0x02 – Zero Soft Threshold. When soft threshold is crossed reset soft threshold
                                tracking to 0.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="addCapDetailResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addCapDetailReturn" type="tns:addCapDetailResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addCapDetailResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant cap detail ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modCapDetailRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="modCapDetailRequestType" type="tns:modCapDetailRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modCapDetailRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="limit" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Hard limit for the cap.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="flags" type="tns:flagsSimpleType">
                        <xsd:annotation>
                            <xsd:documentation>
                                Bit mask of options:
                                1 – Multi Soft Threshold. Allow soft threshold to fire multiple times instead of once.
                                2 – Zero Soft Threshold. When soft threshold is crossed reset soft threshold tracking to 0.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="pattern" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The activity pattern. i.e. Like a crontab entry.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="cdid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Cap Detail ID to modify.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="action" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule action to trigger when this cap fires or fails to fire.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="threshold" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Soft limit for the cap.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modCapDetailResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="modCapDetailReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="delCapDetail">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delCapDetailRequest" type="tns:delCapDetailRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="delCapDetailRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="cdid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Cap Detail ID to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delCapDetailResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delCapDetailReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <!--Rules Requests & Responses-->
    <xsd:element name="addRuleRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addRuleRequestType" type="tns:addRuleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addRuleRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="context_id" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Type of rule to add. Valid values are:
                                1) Capability rule.
                                2) Fee rule.
                                3) Bonus rule.
                                4) Commission rule.
                                5) Promotion rule.
                                6) Access control rule.
                                7) Group access control rule.
                                8) Auto group map rule.
                                9) RRP.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="description" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The name of the rule.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="addRuleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addRuleReturn" type="tns:addRuleResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addRuleResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The resultant rule id.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modRuleRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modRuleRequestType" type="tns:modRuleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modRuleRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="rule_id" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule to modify.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="description" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The new name for the rule.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modRuleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modRuleReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="delRuleRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delRuleRequestType" type="tns:delRuleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="delRuleRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="rule_id" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule ID of the rule to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delRuleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delRuleReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getAllRules">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAllRulesRequest" type="stdquery:standardQueryRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getAllRulesResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRulesReturn" type="tns:getAllRulesResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAllRulesResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="ruleslist" type="typedquery:Rule">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of all matching rules.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleRequestType" type="tns:getRuleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleReturn" type="tns:getRuleResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="rule" type="typedquery:Rule">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant rule, if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="mapRuleRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="mapRuleRequestType" type="tns:mapRuleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="mapRuleRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rule_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The rule to map.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent group to map the rule to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="mapRuleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="mapRuleReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="unmapRuleRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="unmapRuleRequestType" type="tns:unmapRuleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="unmapRuleRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rule_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The rule to remove from the group.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent group to remove the rule mapping from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="unmapRuleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="unmapRuleReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <!--Rules Instances Requests & Responses-->
    <xsd:element name="addRuleInstanceRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addRuleInstanceRequestType" type="tns:addRuleInstanceRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addRuleInstanceRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="description" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Description of the instance of the rule.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rule_id" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The rule id to add.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="base_rv_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                If present then use this existing rule instance ID as a basis for the newly
                                added instance and clone this existing ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="addRuleInstanceResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addRuleInstanceReturn" type="tns:addRuleInstanceResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addRuleInstanceResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant instance ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modRuleInstanceRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modRuleInstanceRequestType" type="tns:modRuleInstanceRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modRuleInstanceRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rv_id" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule version/instance ID to modify.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="description" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                New description of the instance of the rule.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modRuleInstanceResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modRuleInstanceReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="delRuleInstanceRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delRuleInstanceRequestType" type="tns:delRuleInstanceRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="delRuleInstanceRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rv_id" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The rule version/instance ID to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delRuleInstanceResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delRuleInstanceReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="actRuleInstanceRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="actRuleInstanceRequestType" type="tns:actRuleInstanceRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="actRuleInstanceRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rv_id" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule version (instance ID) to activate and make the new active rule.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="actRuleInstanceResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="actRuleInstanceReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="deactRuleInstanceRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deactRuleInstanceRequestType" type="tns:deactRuleInstanceRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="deactRuleInstanceRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rule_id" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule that is to be deactivated. The currently active rule instance will be
                                deactivated.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="deactRuleInstanceResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deactRuleInstanceReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getRuleInstanceRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleInstanceRequestType" type="tns:getRuleInstanceRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleInstanceRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule version/instance ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleInstanceResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleInstanceReturn" type="tns:getRuleInstanceResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleInstanceResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ruleInstance" type="typedquery:RuleInstance">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant rule version/instance, if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleInstanceListRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleInstanceListRequestType" type="tns:getRuleInstanceListRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleInstanceListRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ruleid" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleInstanceListResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleInstanceListReturn" type="tns:getRuleInstanceListResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleInstanceListResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="ruleInstanceList" type="typedquery:RuleInstance">
                        <xsd:annotation>
                            <xsd:documentation>
                                List of all matching rule instances.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <!--Rules Entities Requests & Responses-->
    <xsd:element name="addRuleEntityRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addRuleEntityRequestType" type="tns:addRuleEntityRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addRuleEntityRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="rv_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The rule version this entity belongs to.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="description" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The description of the entity.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="template_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The template this rule entity is based on. Do not use in conjunction with
                                template_ref.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="template_ref" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The template reference this rule entity is based on. Do not use in conjunction
                                with template_id.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="parent_reid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Parent rule entity for this entity. Base entities leave this empty.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="params" type="tns:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                Key/value pair parameters. Allowed values dependant upon the type of rule.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="addRuleEntityResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addRuleEntityReturn" type="tns:addRuleEntityResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addRuleEntityResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant rule entity id.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modRuleEntityRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modRuleEntityRequestType" type="tns:modRuleEntityRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modRuleEntityRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="re_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule entity to modify.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="description" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The description of the entity.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="params" type="tns:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                Key/value pair parameters. Allowed values are dependant
                                upon the type of rule. Note that the Map does not
                                completely replace the existing map, it is merged
                                into the existing map. Items in the old map but not in
                                the new map will not be replaced.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modRuleEntityResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modRuleEntityReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="delRuleEntityRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delRuleEntityRequestType" type="tns:delRuleEntityRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="delRuleEntityRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="re_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The rule entity ID of the rule entity to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="delRuleEntityResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="delRuleEntityReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getRuleEntityRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleEntityRequestType" type="tns:getRuleEntityRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleEntityRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule entity ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleEntityResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleEntityReturn" type="tns:getRuleEntityResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleEntityResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ruleEntity" type="typedquery:RuleEntity">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant rule entity, if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleEntityListRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleEntityListRequestType" type="tns:getRuleEntityListRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleEntityListRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="rvid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule version/instance ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleEntityListResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleEntityListReturn" type="tns:getRuleEntityListResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleEntityListResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="ruleEntityList" type="typedquery:RuleEntity">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of all matching rule entities.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleEntitiesByParentRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleEntitiesByParentRequestType" type="tns:getRuleEntitiesByParentRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleEntitiesByParentRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="rvid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule version/instance ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="parentid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Parent rule entity ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleEntitiesByParentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleEntitiesByParentReturn" type="tns:getRuleEntityListResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="moveRuleEntityUpRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="moveRuleEntityUpRequestType" type="tns:moveRuleEntityUpRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="moveRuleEntityUpRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="re_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule entity to move up.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="moveRuleEntityUpResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="moveRuleEntityUpReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="moveRuleEntityDownRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="moveRuleEntityDownRequestType" type="tns:moveRuleEntityDownRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="moveRuleEntityDownRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="re_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule entity to move down.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="moveRuleEntityDownResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="moveRuleEntityDownReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <!--Rules Templates Requests & Responses-->
    <xsd:element name="getRuleTemplateRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleTemplateRequestType" type="tns:getRuleTemplateRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleTemplateRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule template ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleTemplateResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleTemplateReturn" type="tns:getRuleTemplateResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleTemplateResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ruleTemplate" type="typedquery:RuleTemplate">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant rule template, if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleTemplateListRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleTemplateListRequestType" type="tns:getRuleTemplateListRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleTemplateListRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="contextid" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule context ID. Valid values are:
                                1) Capability rule.
                                2) Fee rule.
                                3) Bonus rule.
                                4) Commission rule.
                                5) Promotion rule.
                                6) Access control rule.
                                7) Group access control rule.
                                8) Auto group map rule.
                                9) RRP.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleTemplateListResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getRuleTemplateListReturn" type="tns:getRuleTemplateListResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleTemplateListResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="ruleTemplateList" type="typedquery:RuleTemplate">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of all matching rule templates.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <!--Groups Requests & Responses-->
    <xsd:element name="createGroupRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createGroupRequestType" type="tns:createGroupRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="createGroupRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Group name.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type">
                        <xsd:annotation>
                            <xsd:documentation>
                                Group type. Valid values are
                                0 – Normal User Group (default)
                                1 – Unmappable System Group. Cannot be deleted. Web O+M users are not allowed to
                                map/unmap agents out of this group.
                                2 – Mappable System Group. Cannot be deleted. Web O+M users are permitted to
                                map/unmap agents out of this group.
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                            <xsd:restriction base="xsd:int">
                                <!-- Generic types possible for group creation. -->
                                <xsd:enumeration id="NormalUserGroup" value="0" />
                                <xsd:enumeration id="UnmappableSystemGroup" value="1" />
                                <xsd:enumeration id="MappableSystemGroup" value="2" />
                            </xsd:restriction>
                        </xsd:simpleType>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent_category" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The category that this group will belongs to (e.g. Distributor or User).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="createGroupResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createGroupReturn" type="tns:createGroupResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="createGroupResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant group ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="deleteGroupRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deleteGroupRequestType" type="tns:deleteGroupRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="deleteGroupRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Group ID of agent group to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="deleteGroupResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deleteGroupReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="modifyGroupRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="modifyGroupRequestType" type="tns:modifyGroupRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modifyGroupRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Group to modify.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                New group name.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modifyGroupResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="modifyGroupReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getGroupRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getGroupRequestType" type="tns:getGroupRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getGroupRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Group ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getGroupResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getGroupResponseType" type="tns:getGroupResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getGroupResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agentGroup" type="typedquery:AgentGroup">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant group, if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="getAllGroupsRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="filter">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element minOccurs="1" maxOccurs="1" name="category" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            The category that this group will belongs to (e.g. Distributor or User).
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="1" maxOccurs="1" name="includeUncategorised" type="xsd:boolean">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Whether or not to also return groups that does not belong to any category.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAllGroupsRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getAllGroupsRequest" type="tns:getAllGroupsRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getAllGroupsResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getAllGroupsResponseType" type="tns:getGroupListResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getGroupListResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="agentGroupList" type="typedquery:AgentGroup">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of matching agent groups.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getGroupByNameRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getGroupByNameRequestType" type="tns:getGroupByNameRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getGroupByNameRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Group name.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="category" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The group category. For instance: Distributor or User.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getGroupByNameResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="0" maxOccurs="1" name="agentGroup" type="typedquery:AgentGroup">
                    <xsd:annotation>
                        <xsd:documentation>
                            Resultant agent group if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getGroupsByTypeRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getGroupsByTypeRequestType" type="tns:getGroupsByTypeRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getGroupsByTypeRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Group type.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getGroupsByTypeResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getGroupsByTypeResponseType" type="tns:getGroupListResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="mapAgentRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="mapAgentRequestType" type="tns:mapAgentRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="mapAgentRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent group to map.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of the agent to map.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="mapAgentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="mapAgentReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="unmapAgentRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="unmapAgentRequestType" type="tns:unmapAgentRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="unmapAgentRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agid" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The agent group the agent is to be removed from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of the agent to remove.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="unmapAgentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="unmapAgentReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="createVoucher">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createVoucherRequest" type="tns:createVoucherRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="createVoucherRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of the provider. If not set assume provider is the logged in SOAP user.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The value of the voucher.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="uvid" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Unique identifier for the voucher.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="expiry" type="xsd:dateTime">
                        <xsd:annotation>
                            <xsd:documentation>
                                When the voucher expires.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="params" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Optional voucher parameters. Comma separated key=value pairs.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="createVoucherResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createVoucherReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="deleteVoucher">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deleteVoucherRequest" type="tns:deleteVoucherRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="deleteVoucherRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of the provider.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="delete_id" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                UVID of the voucher to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="deleteVoucherResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deleteVoucherReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="resetPinRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="resetPinRequestType" type="tns:resetPinRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="resetPinRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="new_pin_type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Type of pin. 0 = default pin. Some systems will offer different pin types for
                                different access channels.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="new_pin_encoding" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Pin type. "ldap" – LDAP based authentication. "none" – this use can access
                                without providing authentication
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="new_pin" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                New PIN. If not set a pin will be auto generated.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Agent to reset.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="suppress_pin_expiry" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>
                                If set to true then newly generated PIN will not be expired. If false (default)
                                user will be forced to issue a change pin.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="resetPinResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="resetPinReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="adjustWalletRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="adjustWalletRequestType" type="tns:adjustWalletRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="adjustWalletRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Amount to adjust.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of debtor. If not present defaults to MASTER.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of creditor. If not present defaults to MASTER.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="tns:WalletType">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type. Defaults to E-Wallet. Valid types are:
                                (1) E-Wallet.
                                (2) Stock[Wholesale airtime].
                                (3) Loyalty Points.
                                (4) Stock[Retail Airtime – used for p2p share].
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="adjustWalletResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="adjustWalletReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="modifyAccountRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="modifyAccountRequestType" type="tns:modifyAccountRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modifyAccountRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="upper_limit" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Upper balance limit.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lower_limit" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Lower balance limit.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="cap_set" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Cap Set to apply to this account.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="tns:WalletType">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type. Defaults to E-Wallet. Types are:
                                (1) E-Wallet.
                                (2) Stock[Wholesale airtime].
                                (3) Loyalty Points.
                                (4) Stock[Retail Airtime – used for p2p share].
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of agent whose wallet we will modify.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="threshold" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Notification threshold.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modifyAccountResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="modifyAccountReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:simpleType name="WalletType">
        <xsd:restriction base="xsd:int">
            <!-- Possible Wallet type codes. -->
            <xsd:enumeration id="E_WALLET" value="1" />
            <xsd:enumeration id="WHOLE_SALE_AIRTIME" value="2" />
            <xsd:enumeration id="LOYALTY_POINTS" value="3" />
            <xsd:enumeration id="RETAIL_AIRTIME" value="4" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:element name="sellStockRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="sellStockRequestType" type="tns:sellStockRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="sellStockRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Amount to sell.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="from" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of debtor.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                MSISDN of creditor.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="purchase_order" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Purchase order number. If present must be unique.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="money" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wholesale price of the amount sold.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="commission_id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Commission Context Rule that will apply for this batch of stock injected into
                                the system.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="params" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                A comma separated list (no white spaces padding allowed) of key value pairs.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="sellStockResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="sellStockReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="dispenseVoucher">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="dispenseVoucherRequest" type="tns:dispenseVoucherRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="dispenseVoucherRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The voucher provider to get a voucher from.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type to use to pay for the voucher. Default is E-Wallet.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Voucher value to buy.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="recipient" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The recipient of the voucher. Send sms notification to them.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="dispenseVoucherResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="dispenseVoucherReturn" type="tns:dispenseVoucherResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="dispenseVoucherResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="uvid" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant voucher ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="expiryDate" type="xsd:dateTime">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant dispensed voucher exipry date.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="dispenseParams" type="tns:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                Resultant dispense voucher params.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getVoucherRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getVoucherRequestType" type="tns:getVoucherRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getVoucherRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="uvid" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Voucher ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="lock" type="xsd:boolean" fixed="false">
                    <xsd:annotation>
                        <xsd:documentation>
                            Fixes as false. Do not modify.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getVoucherResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getVoucherReturn" type="tns:getVoucherResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getVoucherResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="aVoucher" type="typedquery:Voucher">
                        <xsd:annotation>
                            <xsd:documentation>
                                The resultant voucher, if it exists.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="addScheduleRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="addScheduleRequestType" type="tns:addScheduleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addScheduleRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="command" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The command to perform.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="pattern" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The schedule pattern. i.e. Crontab entry.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="count" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                0 = infinite, 1 = once only (default), n = n times
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lookup_type" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Useful for identifying/keying the schedule for later lookup.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lookup_key" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Useful for identifying/keying the schedule for later lookup.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="params" type="tns:KeyValuePairMap">
                        <xsd:annotation>
                            <xsd:documentation>
                                Map of parameters to pass. Depends on biz function.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="addScheduleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="addScheduleReturn" type="tns:addScheduleResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="addScheduleResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Schedule ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="deleteScheduleRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="deleteScheduleRequestType" type="tns:deleteScheduleRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="deleteScheduleRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="id" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Schedule ID for deletion.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="deleteScheduleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="deleteScheduleReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="getRuleListByContextIdRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getRuleListByContextIdRequestType" type="tns:getRuleListByContextIdRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleListByContextIdRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="context" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Rule context ID. Valid values are:
                                1) Capability rule.
                                2) Fee rule.
                                3) Bonus rule.
                                4) Commission rule.
                                5) Promotion rule.
                                6) Access control rule.
                                7) Group access control rule.
                                8) Auto group map rule.
                                9) RRP.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getRuleListByContextIdResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getRuleListByContextIdResponseType" type="tns:getRuleListByContextIdResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getRuleListByContextIdResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="unbounded" name="rulesList" type="typedquery:Rule">
                        <xsd:annotation>
                            <xsd:documentation>
                                A list of all the matching rules.<!-- Please see TypedQuery.xsd toward the bottom of this document. -->
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="coupontransfer">
    	<xsd:complexType>
    		<xsd:sequence>
    			<xsd:element minOccurs="1" maxOccurs="1" name="coupontransferRequestType" type="tns:coupontransferRequestType" />
    		</xsd:sequence>
    	</xsd:complexType>
    </xsd:element>
    <xsd:complexType name="coupontransferRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                Amount to take from the coupon
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Wallet type ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="couponid" type="xsd:string">
                        <xsd:annotation>
                        	<xsd:documentation>
                        		Coupon ID of the coupon to source funds from.
                        </xsd:documentation>
                    	</xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="coupontransferResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="coupontransferReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
  <xsd:element name="invokeRequest">
      <xsd:complexType>
          <xsd:sequence>
              <xsd:element name="invokeRequestType" type="tns:invokeRequestType" />
          </xsd:sequence>
      </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="invokeRequestType">
      <xsd:complexContent>
          <xsd:extension base="tns:standardBizRequest">
              <xsd:sequence>
                  <xsd:element minOccurs="1" maxOccurs="1" name="function_name" type="xsd:string">
                      <xsd:annotation>
                          <xsd:documentation>
                              The name of the function to invoke on the end-point.
                          </xsd:documentation>
                      </xsd:annotation>
                  </xsd:element>
                <xsd:element minOccurs="1" maxOccurs="1" name="parameters" type="tns:KeyValuePairMap">
                    <xsd:annotation>
                        <xsd:documentation>
                            Parameters to pass to the function invoked on the end-point.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                 <xsd:element minOccurs="1" maxOccurs="1" name="target" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                          The agent reference of the end-point in the U:Market system.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
          </xsd:extension>
      </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="invokeResponse">
      <xsd:complexType>
          <xsd:sequence>
              <xsd:element name="invokeResponse" type="tns:invokeResponseType" />
          </xsd:sequence>
      </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="invokeResponseType">
      <xsd:complexContent>
          <xsd:extension base="tns:standardBizResponse">
              <xsd:sequence>
                  <xsd:element minOccurs="1" maxOccurs="1" name="invoke_success" type="xsd:boolean">
                      <xsd:annotation>
                          <xsd:documentation>
                              The result of the invocation. Success is denoted by a true value.
                              Note that this should not be confused with UMarket's result value.
                          </xsd:documentation>
                      </xsd:annotation>
                  </xsd:element>
                <xsd:element minOccurs="1" maxOccurs="1" name="incoming" type="tns:KeyValuePairMap">
                      <xsd:annotation>
                          <xsd:documentation>
                              The parameters returned by the end-point.
                          </xsd:documentation>
                      </xsd:annotation>
                  </xsd:element>
              </xsd:sequence>
          </xsd:extension>
      </xsd:complexContent>
  </xsd:complexType>
    <xsd:element name="getChildListByReferenceIDRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getChildListByReferenceIDRequestType" type="tns:getChildListByReferenceIDRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getChildListByReferenceIDRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agentReferenceID" type="xsd:long" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getChildListByReferenceIDResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getChildListByReferenceIDResponseType" type="tns:getChildListByReferenceIDResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getChildListByReferenceIDResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="agentList" type="typedquery:Agent" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getParentListByReferenceIDRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getParentListByReferenceIDRequestType" type="tns:getParentListByReferenceIDRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getParentListByReferenceIDRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="agentReferenceID" type="xsd:long" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getParentListByReferenceIDResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="getParentListByReferenceIDResponseType" type="tns:getParentListByReferenceIDResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getParentListByReferenceIDResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="agentList" type="typedquery:Agent" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="convertRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="convertRequestType" type="tns:convertRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="convertRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="amount" type="xsd:decimal">
                        <xsd:annotation>
                            <xsd:documentation>
                                The amount of funds to convert.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The type of funds to send. Valid values are
                                1 (e­wallet) and 3 (points). If not specified
                                defaults to 1 (e­wallet).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="to_type" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The type of funds to convert to. Valid values are
                                1 (e­wallet) and 3 (points). If not specified
                                defaults to 1 (e­wallet).
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="convertResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="convertReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <!-- %OPERATION_REQUEST_RESPONSE_MARKER%    Do NOT remove this line. it is being used by code generation. -->
    <!--Standard requests & response-->
    <xsd:complexType name="standardBizRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="sessionid" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                A valid session id (for most functions you will have to login)
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="wait" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>
                                Some commands require interaction with external
                                systems or external user i.e. To perform a bank
                                operation or to wait for confirmation. By default a
                                SOAP request will wait for all external transactions
                                to complete before returning success. SOAP will
                                wait for external systems like banks and users to
                                contribute to the transaction.
                                If a SOAP response to only indicate initial
                                acceptance of the transaction is required then the
                                wait parameter can be set to false. When this is
                                done, and the response from soap is success (0),
                                this only means that the transaction was successful
                                so far and that an external entity such as a banking
                                platform may still cause the transaction to fail.
                                In order to have SOAP return immediately without
                                waiting for external parties, set the wait parameter
                                to false.
                                By default wait is assumed to be true.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="schedule" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Schedule this transaction to run at the specified
                                time. Refer to Appendix A of the Functional
                                Specification for valid values for schedule. Note
                                that is schedule is set then the wait parameter will
                                have no effect.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="schedfreq" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                The frequency for the schedule. 1 means run the
                                schedule once only. N means run the schedule n
                                times. If not specified the schedule is set to run
                                indefinently – until it is explicitly deleted or the
                                underlying function that is requested fails 3
                                consecutive times.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ext_usedefault" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                For debit E­Wallet transactions – source the funds
                                from an external bank.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ext_source" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                For debit E­Wallet transactions – source the funds
                                from an external system such as a bank.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ext_details" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                For debit E­Wallet transactions – source details –
                                like a bank account number etc.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ext_src_method" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Used for coupon­funded transactions, the
                                parameter value should be set to 'couponsource'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="ext_couponid" type="xsd:string">
                        <xsd:annotation>
                        <xsd:documentation>
                        Coupon ID of the coupon to source funds from.
                        </xsd:documentation>
                    </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="suppress_confirm" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>
                                Suppress confirmation.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="suppress_notify_trans" type="xsd:boolean">
                        <xsd:annotation>
                            <xsd:documentation>
                                Suppress notification trans.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="trans_ext_reference" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Client supplied reference for the request.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="standardBizResponse">
        <xsd:sequence>
            <xsd:element minOccurs="0" maxOccurs="1" name="transid" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>
                        For Biz type functions – transid represents the ID that
                        the request was submitted to the core upon.
                        For new transactions, transactions that were initiated
                        by the soap call, the transid returned will represent
                        the transaction id that is used to track the actual
                        transaction request. This id can be supplied to query
                        command to query the state of the transaction and
                        will be yielded by reports that report on transactions.
                        For existing transactions, such as transactions
                        accessed via the confirm command, the transid
                        returned has little value to the SOAP client and is only
                        meaningful for systems tracing. The transid provided
                        as part of the request is the id that is meaningful for
                        transaction tracing purposes.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" maxOccurs="1" name="schedule_id" type="xsd:long">
                <xsd:annotation>
                    <xsd:documentation>
                        If you request a biz function to be scheduled this
                        parameter will yield an ID number that is used to track
                        the schedule job. You pass this number through the
                        delschedule function to delete a schedule later.
                        Note that this number is different to the transid. For a
                        scheduled transaction – the transid will represent a
                        add_schedule function – the act of requesting a
                        schedule. It does not represent the schedule itself
                        (schedule_id does this). Nor does it represent the
                        transid of the transaction when it is run by the
                        scheduler.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="1" maxOccurs="1" name="result" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>
                        The result code represents the actual outcome of the request. A result of 0
                        represents success. Non zero values represent failure. See Appendix A for
                        complete list of possible result codes.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="1" maxOccurs="1" name="result_namespace" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        Represents a string. It can be one of the following values:
                        'soap' - a soap based result
                        'session' – a session based result
                        'core' – a result generated by the biz component
                        'umarket' – a result generated by the biz component
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" maxOccurs="1" name="fee" type="xsd:decimal">
                <xsd:annotation>
                    <xsd:documentation>
                        For transaction based operations this parameter will
                        report any fees collected from the initiating party in
                        the transaction.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" maxOccurs="1" name="trans_ext_reference" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        Client supplied reference for the request.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="queryVoucher">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="queryVoucher" type="tns:queryVoucherRequestType" minOccurs="1" maxOccurs="1" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="queryVoucherRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element name="target" type="xsd:string" maxOccurs="1" minOccurs="1">
                        <xsd:annotation>
                            <xsd:documentation>Reference of voucher provider</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="recipient" type="xsd:string" maxOccurs="1" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The recipient of the voucher. If not specified, default to the initiator.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="queryVoucherResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="queryVoucherReturn" type="tns:queryVoucherResponseType" minOccurs="1" maxOccurs="1" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="queryVoucherResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element name="voucher" type="typedquery:Voucher" maxOccurs="1" minOccurs="0">
                        <xsd:annotation>
                            <xsd:documentation>The last used voucher</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="vouchers" type="typedquery:Voucher" maxOccurs="unbounded" minOccurs="0" nillable="true">
                        <xsd:annotation>
                            <xsd:documentation>The list of last used vouchers</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>



    <xsd:element name="querySecretRequest">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="querySecretRequestElement" type="tns:querySecretRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="querySecretRequestType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="agent" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                               The relevant agent who's secret word is being queried.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="secret" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Current secret word of the agent.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="querySecretResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="1" maxOccurs="1" name="querySecretResponseElement" type="tns:querySecretResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="querySecretResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="secret" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Current secret word of the relevant.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="matched" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                Indicates whether the agent's secret word matches the one sent in the request.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- Types for Attachment operations -->

    <xsd:element name="createAttachment">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createAttachmentRequest" type="tns:createAttachmentRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="createAttachmentRequest">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="attachment" type="typedquery:Attachment">
                        <xsd:annotation>
                            <xsd:documentation>
                                The attachmment to add. The ID of the supplied attachment is ignored. The new ID will be returned in the response if successful.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="createAttachmentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="createAttachmentReturn" type="tns:createAttachmentResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="createAttachmentResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="attachmentID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The ID of the new attachmment.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="modifyAttachment">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modifyAttachmentRequest" type="tns:modifyAttachmentRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="modifyAttachmentRequest">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="attachment" type="typedquery:Attachment">
                        <xsd:annotation>
                            <xsd:documentation>
                                The modified attachment.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="modifyAttachmentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="modifyAttachmentReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="deleteAttachment">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deleteAttachmentRequest" type="tns:deleteAttachmentRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="deleteAttachmentRequest">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="attachmentID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The ID of the attachment to delete.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="deleteAttachmentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="deleteAttachmentReturn" type="tns:standardBizResponse" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="getAttachment">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAttachmentRequest" type="tns:getAttachmentRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAttachmentRequest">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="attachmentID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                The ID of the attachment to fetch. To get all attachments for an entity use getAttachmentReferencesByEntity instead.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="getAttachmentResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAttachmentReturn" type="tns:getAttachmentResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAttachmentResponseType">
        <xsd:complexContent>
            <xsd:extension base="tns:standardBizResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="attachment" type="typedquery:Attachment" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:element name="getAttachmentReferencesByEntity">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAttachmentReferencesByEntityRequest" type="tns:getAttachmentReferencesByEntityRequest" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAttachmentReferencesByEntityRequest">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="entityID" type="xsd:long">
                        <xsd:annotation>
                            <xsd:documentation>
                                Entity ID for retrieving attachment references. If entity type is '1' then this is the agent ID.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="1" maxOccurs="1" name="entityType" type="xsd:int">
                        <xsd:annotation>
                            <xsd:documentation>
                                Entity type for retrieving attachments references. Agents are entity type 1.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="AttachmentReferencesResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="AttachmentReferencesReturn" type="tns:AttachmentReferencesResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="AttachmentReferencesResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="attachmentReferences" type="typedquery:AttachmentReference">
                        <xsd:annotation>
                            <xsd:documentation>
                                Attachment reference/s. This does not include the attachment data. To fetch the data call getAttachment with the ID from each reference.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
     <xsd:element name="getAllSchedules">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="getAllSchedulesRequest" type="tns:getAllSchedulesRequestType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:complexType name="getAllSchedulesRequestType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryRequest">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="1" name="command" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                 The command that the schedule will execute.
                                 Refer to Web2 valid values:
                                 core.biz.batch.BatchSchedule
                                 umarket.biz.Buy
                                 umarket.biz.SellStock
                                 umarket.biz.Transfer
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lookup_type" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                 The type associated with the scheudule.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="1" name="lookup_key" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                 The key associated with the schedule.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="SchedulesResponseType">
        <xsd:complexContent>
            <xsd:extension base="stdquery:standardQueryResponse">
                <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" nillable="true" name="schedulesList" type="typedquery:MarketSchedule">
                        <xsd:annotation>
                            <xsd:documentation>
                                Schedules.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="SchedulesResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="ScheduleReturn" type="tns:SchedulesResponseType" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <!-- End of types for Attachment operations -->

</xsd:schema>
